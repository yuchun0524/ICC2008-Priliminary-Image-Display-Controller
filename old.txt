module lcd_ctrl(clk, reset, datain, cmd, cmd_valid, dataout, output_valid, busy);
input           clk;
input           reset;
input   [7:0]   datain;
input   [2:0]   cmd;
input           cmd_valid;
output  reg     [7:0]dataout, dataout_next;
output  reg     output_valid, output_valid_next;
output  reg     busy, busy_next;
reg   [7:0]buffer[107:0], buffer_next[107:0]; 
reg   [6:0]count, count_next;
reg   [3:0]out_count, out_count_next;
reg   [6:0]origin, origin_next;
reg   [1:0]state, state_next;
reg   valid, valid_next;

parameter load = 3'd0,
          in = 3'd1,
          fit = 3'd2,
          right = 3'd3,
          left = 3'd4,
          up = 3'd5,
          down = 3'd6;  
integer i;         

always@(posedge clk)
begin
  if(reset)
    begin
      dataout <= 8'd0;
      output_valid <= 1'b0;
      busy <= 1'b0;
      count <= 7'd0;
      out_count <= 4'd0;
      origin <= 7'd0;
      state <= 2'd0;
      valid <= 1'b0;
      for(i = 0; i < 108; i = i + 1)
        buffer[i] <= 0;
  end
  else
    begin
      dataout <= dataout_next;
      dataout <= 8'd0;
      output_valid <= 1'b0;
      busy <= 1'b0;
      count <= 7'd0;
      out_count <= 4'd0;
      origin <= 7'd0;
      state <= 2'd0;
      valid <= 1'b0;
      for(i = 0; i < 108; i = i + 1)
        buffer[i] <= 0;
  end   
        
      
end                                                                   
endmodule
